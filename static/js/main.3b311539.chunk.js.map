{"version":3,"sources":["components/layout/spinner.gif","components/layout/Navbar.js","components/users/UserItem.js","components/layout/Spinner.js","components/users/Users.js","components/repos/RepoItem.js","components/repos/Repos.js","components/users/User.js","components/users/Search.js","components/layout/Alert.js","components/pages/About.js","App.js","index.js"],"names":["module","exports","Navbar","icon","title","className","to","defaultProps","UserItem","user","avatar_url","login","html_url","style","width","src","alt","Spinner","spiner","display","margin","userStyle","gridTemplateColumns","gridGap","Users","users","loading","map","key","id","RepoItem","repo","href","name","Repos","repos","User","getUser","getUserRepos","match","useEffect","params","company","location","bio","blog","followers","following","public_repos","public_gists","hireable","target","Search","clearUsers","showClear","searchUser","showAlert","useState","text","setText","onSubmit","e","preventDefault","trim","type","placeholder","value","onChange","marginTop","onClick","Alert","alert","msg","About","App","setUsers","setUser","setRepos","setLoading","setAlert","a","axios","get","process","res","data","items","username","setTimeout","exact","path","render","props","length","ReactDOM","document","getElementById"],"mappings":"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","file":"static/js/main.3b311539.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/spinner.9b54dbe8.gif\";","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Link } from 'react-router-dom';\nconst Navbar = ({ icon, title }) => {\n  return (\n    <div className='navbar bg-primary'>\n      <Link to='/'>\n        <h1>\n          <i className={icon}></i>\n          {title}\n        </h1>\n      </Link>\n\n      <ul className=''>\n        <li>\n          <Link to='/about'>About</Link>\n        </li>\n        <li>\n          <Link to='/'>Home</Link>\n        </li>\n      </ul>\n    </div>\n  );\n};\n\nNavbar.defaultProps = {\n  icon: 'fab fa-github',\n  title: 'Github Finder'\n};\nNavbar.propTypes = {\n  icon: PropTypes.string.isRequired,\n  title: PropTypes.string.isRequired\n};\n\nexport default Navbar;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Link } from 'react-router-dom';\n\n// destructure: user from props and then avatar_url, ... etc from prop.user\nconst UserItem = ({ user: { avatar_url, login, html_url } }) => {\n  return (\n    <div className='card text-center'>\n      <img\n        style={{ width: '60px' }}\n        className='round-img'\n        src={avatar_url}\n        alt='avatar'\n      />\n      <h3>{login}</h3>\n      <Link to={`/user/${login}`} className='btn btn-dark btn-sm my-1'>\n        More\n      </Link>\n    </div>\n  );\n};\n\nUserItem.propTypes = {\n  user: PropTypes.object.isRequired\n};\nexport default UserItem;\n","import React, { Fragment } from 'react';\nimport spiner from './spinner.gif';\nconst Spinner = () => (\n  <Fragment>\n    <img\n      src={spiner}\n      alt='Loading...'\n      style={{ display: 'block', width: '500px', margin: 'auto' }}\n    />\n  </Fragment>\n);\n\nexport default Spinner;\n","import React from 'react';\nimport UserItem from './UserItem';\nimport Spinner from '../layout/Spinner';\nimport PropTypes from 'prop-types';\n\nconst Users = ({ users, loading }) => {\n  if (loading) {\n    return <Spinner />;\n  } else {\n    return (\n      <div style={userStyle}>\n        {users.map(user => (\n          <UserItem key={user.id} user={user} />\n        ))}\n      </div>\n    );\n  }\n};\n\nconst userStyle = {\n  display: 'grid',\n  gridTemplateColumns: 'repeat(3, 1fr)',\n  gridGap: '1rem'\n};\nUsers.propTypes = {\n  users: PropTypes.array.isRequired,\n  loading: PropTypes.bool.isRequired\n};\nexport default Users;\n","import React from 'react';\n\nconst RepoItem = ({ repo }) => {\n  return (\n    <div className='card'>\n      <h3>\n        <a href={repo.html_url}>{repo.name}</a>\n      </h3>\n    </div>\n  );\n};\n\nexport default RepoItem;\n","import React from 'react';\nimport RepoItem from './RepoItem';\n\nconst Repos = ({ repos }) => {\n  return repos.map(repo => <RepoItem repo={repo} key={repo.id} />);\n};\n\nexport default Repos;\n","import React, { Fragment, useEffect } from 'react';\nimport Spinner from '../layout/Spinner';\nimport PropTypes from 'prop-types';\nimport { Link } from 'react-router-dom';\nimport Repos from '../repos/Repos';\n\nconst User = ({ getUser, getUserRepos, match, user, loading, repos }) => {\n  useEffect(() => {\n    getUser(match.params.login);\n    getUserRepos(match.params.login);\n    //eslint-disable-next-line\n  }, []);\n\n  const {\n    company,\n    name,\n    avatar_url,\n    location,\n    bio,\n    blog,\n    login,\n    html_url,\n    followers,\n    following,\n    public_repos,\n    public_gists,\n    hireable\n  } = user;\n\n  if (loading) return <Spinner />;\n  return (\n    <Fragment>\n      <Link to='/' className='btn btn-light'>\n        Back to Search\n      </Link>\n      Hireable:{' '}\n      {hireable ? (\n        <i className='fas fa-check text-success' />\n      ) : (\n        <i className='fas fa-times-circle text-danger' />\n      )}\n      <div className='card grid-2'>\n        <div className='all-center'>\n          <img\n            src={avatar_url}\n            className='round-img'\n            alt=''\n            style={{ width: '150px' }}\n          />\n          <h1>{name}</h1>\n          Location: {location}\n        </div>\n        <div>\n          {bio && (\n            <Fragment>\n              <h3>Bio: </h3>\n              <p>{bio}</p>\n            </Fragment>\n          )}\n          <a target='blank' href={html_url} className='btn btn-dark my-1'>\n            Visit Github Profile\n          </a>\n          <ul>\n            <li>\n              {login && (\n                <Fragment>\n                  <strong>Username: </strong>\n                  {login}\n                </Fragment>\n              )}\n            </li>\n\n            <li>\n              {company && (\n                <Fragment>\n                  <strong>Company: </strong>\n                  {company}\n                </Fragment>\n              )}\n            </li>\n\n            <li>\n              {blog && (\n                <Fragment>\n                  <strong>Website: </strong>\n                  <a target='blank' title='Visit Website' href={`${blog}`}>\n                    {blog}\n                  </a>\n                </Fragment>\n              )}\n            </li>\n          </ul>\n        </div>\n      </div>\n      <div className='card text-center'>\n        <div className='badge badge-primary'>Followers: {followers}</div>\n        <div className='badge badge-success'>Following: {following}</div>\n        <div className='badge badge-light'>Public Repos: {public_repos}</div>\n        <div className='badge badge-dark'>Public Gist: {public_gists}</div>\n      </div>\n      <Repos repos={repos} />\n    </Fragment>\n  );\n};\n\nUser.propTypes = {\n  loading: PropTypes.bool,\n  user: PropTypes.object.isRequired,\n  getUser: PropTypes.func.isRequired\n};\nexport default User;\n","import React, { useState } from 'react';\nimport PropTypes from 'prop-types';\n\nconst Search = ({ clearUsers, showClear, searchUser, showAlert }) => {\n  const [text, setText] = useState('');\n\n  const onChange = e => {\n    setText(e.target.value);\n  };\n  const onSubmit = e => {\n    e.preventDefault();\n    if (text.trim() === '') {\n      setText('');\n      showAlert('Please Enter Something!', 'light');\n    } else {\n      searchUser(text);\n      setText('');\n    }\n  };\n\n  return (\n    <div>\n      <form\n        className='form'\n        style={{ display: 'grid', gridTemplateColumns: '7fr 1fr' }}\n        onSubmit={onSubmit}\n      >\n        <input\n          type='text'\n          name='text'\n          placeholder='Search Users...'\n          value={text}\n          onChange={onChange}\n        />\n        <input\n          type='submit'\n          value='search'\n          className='btn btn-dark btn-block'\n        />\n      </form>\n      {showClear && (\n        <input\n          type='submit'\n          value='Clear'\n          className='btn btn-light btn-block'\n          style={{ marginTop: '-10px' }}\n          onClick={clearUsers}\n        />\n      )}\n    </div>\n  );\n};\n\nSearch.propTypes = {\n  searchUser: PropTypes.func.isRequired,\n  showClear: PropTypes.bool.isRequired,\n  clearUsers: PropTypes.func.isRequired\n};\nexport default Search;\n","import React from 'react';\n\nconst Alert = ({ alert }) => {\n  return (\n    alert && (\n      <div className={`alert alert-${alert.type}`}>\n        <i className='fas fa-info-circle' /> {alert.msg}\n      </div>\n    )\n  );\n};\n\nexport default Alert;\n","import React, { Fragment } from 'react';\n\nconst About = () => {\n  return (\n    <Fragment>\n      <h1>About this App</h1>\n      <p>App to search github users</p>\n      <p>Version 1.1.0</p>\n    </Fragment>\n  );\n};\n\nexport default About;\n","import React, { useState, Fragment } from 'react';\nimport { BrowserRouter as Router, Switch, Route } from 'react-router-dom';\nimport './App.css';\nimport Navbar from './components/layout/Navbar';\nimport Users from './components/users/Users';\nimport User from './components/users/User';\n\nimport axios from 'axios';\nimport Search from './components/users/Search';\nimport Alert from './components/layout/Alert';\nimport About from './components/pages/About';\nconst App = () => {\n  const [users, setUsers] = useState([]);\n  const [user, setUser] = useState({});\n  const [repos, setRepos] = useState([]);\n  const [loading, setLoading] = useState(false);\n  const [alert, setAlert] = useState(null);\n\n  // search for userS\n  const searchUser = async text => {\n    setLoading(true);\n    const res = await axios.get(\n      `https://api.github.com/search/users?q=${text}&client_id=${process.env.REACT_APP_GITHUB_CLIENT_ID}&client_secret=${process.env.REACT_APP_GITHUB_CLIENT_SECRET}`\n    );\n    setUsers(res.data.items);\n    setLoading(false);\n  };\n\n  // get SINGLE user\n  const getUser = async username => {\n    setLoading(true);\n    const res = await axios.get(\n      `https://api.github.com/users/${username}?client_id=${process.env.REACT_APP_GITHUB_CLIENT_ID}&client_secret=${process.env.REACT_APP_GITHUB_CLIENT_SECRET}`\n    );\n    setUser(res.data);\n    setLoading(false);\n  };\n  // get user REPOS\n  const getUserRepos = async username => {\n    setLoading(true);\n    const res = await axios.get(\n      `https://api.github.com/users/${username}/repos?per_page=5&sort=created:asc&client_id=${process.env.REACT_APP_GITHUB_CLIENT_ID}&client_secret=${process.env.REACT_APP_GITHUB_CLIENT_SECRET}`\n    );\n    setRepos(res.data);\n    setLoading(false);\n  };\n\n  const clearUsers = () => {\n    setUsers([]);\n    setLoading(false);\n  };\n  const showAlert = (msg, type) => {\n    setAlert({ msg, type });\n\n    setTimeout(() => setAlert({ alert: null }), 3000);\n  };\n\n  return (\n    <Router>\n      <div>\n        <Navbar />\n        <div className='container'>\n          <Alert alert={alert} />\n          <Switch>\n            <Route\n              exact\n              path='/'\n              render={props => (\n                <Fragment>\n                  <Search\n                    searchUser={searchUser}\n                    showClear={users.length > 0 ? true : false}\n                    clearUsers={clearUsers}\n                    showAlert={showAlert}\n                  />\n                  <Users loading={loading} users={users} />\n                </Fragment>\n              )}\n            />\n            <Route exact path='/about'>\n              <About />\n            </Route>\n            <Route\n              exact\n              path='/user/:login'\n              render={props => (\n                <User\n                  {...props}\n                  getUser={getUser}\n                  getUserRepos={getUserRepos}\n                  repos={repos}\n                  user={user}\n                  loading={loading}\n                />\n              )}\n            />\n          </Switch>\n        </div>\n      </div>\n    </Router>\n  );\n};\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}